————————————————————————Grammer non-terminals are as follow——————————————————————————
<for循环>
<for循环块>
<while循环>
<while循环块>
<内部赋值>
<参数>
<参数列表>
<参数闭包>
<变量>
<右值>
<否则语句>
<因子>
<因式>
<因式递归>
<声明>
<声明语句>
<声明语句或赋值语句>
<声明语句闭包>
<复合程序块>
<多个数据>
<字符串>
<常量>
<数字>
<数据>
<数据闭包>
<数组下标>
<条件语句>
<条件语句块>
<标准函数>
<标识符>
<特殊函数>
<特殊函数调用>
<程序>
<程序块>
<程序块闭包>
<类型>
<自增减运算符>
<表达式>
<赋值>
<赋值语句>
<赋初值>
<逻辑表达式>
<逻辑运算符>
<项>



———————————————————————-Grammer terminals are as follow————————————————————————
#
$
%
%=
(
)
*
*=
+
++
+=
,
-
--
-=
/
/=
;
<
<=
<>
<字符串
=
==
>
>=
FLOAT_VALUE
ID
INT_VALUE
[
]
else
for
if
int
read
real
string
while
write
{
}



————————————————————————Grammer tokens' first sets are as follow————————————————————————
           : {$}
         # : {#}
         $ : {$}
         % : {%}
        %= : {%=}
         ( : {(}
         ) : {)}
         * : {*}
        *= : {*=}
         + : {+}
        ++ : {++}
        += : {+=}
         , : {,}
         - : {-}
        -- : {--}
        -= : {-=}
         / : {/}
        /= : {/=}
         ; : {;}
         < : {<}
        <= : {<=}
        <> : {<>}
<for循环> : {for}
<for循环块> : {(}
<while循环> : {while}
<while循环块> : {(}
<内部赋值> : {++,--,ID}
  <参数> : {<字符串,FLOAT_VALUE,ID,INT_VALUE}
<参数列表> : {<字符串,FLOAT_VALUE,ID,INT_VALUE}
<参数闭包> : {$,,}
  <变量> : {ID}
  <右值> : {$,%,(,*,+,-,/,FLOAT_VALUE,ID,INT_VALUE,{}
<否则语句> : {$,else}
  <因子> : {$,%,(,*,/,FLOAT_VALUE,ID,INT_VALUE}
  <因式> : {$,(,FLOAT_VALUE,ID,INT_VALUE}
<因式递归> : {$,%,*,/}
  <声明> : {int,real}
<声明语句> : {int,real}
<声明语句或赋值语句> : {++,--,ID,int,real}
<声明语句闭包> : {$,int,real}
<复合程序块> : {{}
<多个数据> : {FLOAT_VALUE,ID,INT_VALUE,string}
<字符串 : {<字符串}
<字符串> : {string}
  <常量> : {FLOAT_VALUE,INT_VALUE,string}
  <数字> : {FLOAT_VALUE,INT_VALUE}
  <数据> : {FLOAT_VALUE,ID,INT_VALUE,string}
<数据闭包> : {$,,}
<数组下标> : {$,[}
<条件语句> : {if}
<条件语句块> : {(}
<标准函数> : {read,write}
<标识符> : {ID}
<特殊函数> : {read,write}
<特殊函数调用> : {read,write}
  <程序> : {$,++,--,;,ID,for,if,int,read,real,while,write}
<程序块> : {$,++,--,;,ID,for,if,int,read,real,while,write}
<程序块闭包> : {$,++,--,ID,for,if,read,while,write}
  <类型> : {int,real}
<自增减运算符> : {++,--}
<表达式> : {$,%,(,*,+,-,/,FLOAT_VALUE,ID,INT_VALUE}
  <赋值> : {%=,*=,++,+=,--,-=,/=,=}
<赋值语句> : {++,--,ID}
<赋初值> : {$,=}
<逻辑表达式> : {%,(,*,+,-,/,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<逻辑运算符> : {<,<=,<>,==,>,>=}
     <项> : {$,+,-}
         = : {=}
        == : {==}
         > : {>}
        >= : {>=}
FLOAT_VALUE : {FLOAT_VALUE}
        ID : {ID}
 INT_VALUE : {INT_VALUE}
         [ : {[}
         ] : {]}
      else : {else}
       for : {for}
        if : {if}
       int : {int}
      read : {read}
      real : {real}
    string : {string}
     while : {while}
     write : {write}
         { : {{}
         } : {}}



————————————————————————Deducers' first sets are as follow————————————————————————
<程序> -> <程序块> : {$,++,--,;,ID,for,if,int,read,real,while,write}
       <程序> -> $ : {$}
    <程序块> -> ; : {;}
<程序块> -> <声明语句闭包> <程序块闭包> : {$,++,--,ID,for,if,int,read,real,while,write}
<声明语句闭包> -> <声明语句> <声明语句闭包> : {int,real}
<声明语句闭包> -> $ : {$}
<声明语句> -> <声明> ; : {int,real}
<声明> -> <类型> <变量> <赋初值> : {int,real}
     <类型> -> int : {int}
    <类型> -> real : {real}
<变量> -> <标识符> <数组下标> : {ID}
   <标识符> -> ID : {ID}
<数组下标> -> [ <因式> ] : {[}
 <数组下标> -> $ : {$}
<因式> -> ( <表达式> ) : {(}
<因式> -> <变量> : {ID}
<因式> -> <数字> : {FLOAT_VALUE,INT_VALUE}
       <因式> -> $ : {$}
<数字> -> INT_VALUE : {INT_VALUE}
<数字> -> FLOAT_VALUE : {FLOAT_VALUE}
<赋初值> -> = <右值> : {=}
    <赋初值> -> $ : {$}
<右值> -> <表达式> : {$,%,(,*,+,-,/,FLOAT_VALUE,ID,INT_VALUE}
<右值> -> { <多个数据> } : {{}
<多个数据> -> <数据> <数据闭包> : {FLOAT_VALUE,ID,INT_VALUE,string}
<数据闭包> -> , <数据> <数据闭包> : {,}
 <数据闭包> -> $ : {$}
<数据> -> <常量> : {FLOAT_VALUE,INT_VALUE,string}
<数据> -> <变量> : {ID}
<常量> -> <数字> : {FLOAT_VALUE,INT_VALUE}
<常量> -> <字符串> : {string}
<表达式> -> <因子> <项> : {$,%,(,*,+,-,/,FLOAT_VALUE,ID,INT_VALUE}
<因子> -> <因式> <因式递归> : {$,%,(,*,/,FLOAT_VALUE,ID,INT_VALUE}
<因式递归> -> * <因式> <因式递归> : {*}
<因式递归> -> / <因式> <因式递归> : {/}
<因式递归> -> % <因式> <因式递归> : {%}
 <因式递归> -> $ : {$}
<项> -> + <因子> <项> : {+}
<项> -> - <因子> <项> : {-}
          <项> -> $ : {$}
<程序块闭包> -> <赋值语句> <程序块> : {++,--,ID}
<程序块闭包> -> <for循环> <程序块> : {for}
<程序块闭包> -> <while循环> <程序块> : {while}
<程序块闭包> -> <条件语句> <程序块> : {if}
<程序块闭包> -> <特殊函数> <程序块> : {read,write}
<程序块闭包> -> $ : {$}
<赋值语句> -> <自增减运算符> <变量> ; : {++,--}
<赋值语句> -> <变量> <赋值> ; : {ID}
<赋值> -> <自增减运算符> : {++,--}
<赋值> -> = <右值> : {=}
<赋值> -> += <右值> : {+=}
<赋值> -> -= <右值> : {-=}
<赋值> -> *= <右值> : {*=}
<赋值> -> /= <右值> : {/=}
<赋值> -> %= <右值> : {%=}
<自增减运算符> -> ++ : {++}
<自增减运算符> -> -- : {--}
<for循环> -> for <for循环块> : {for}
<for循环块> -> ( <声明语句或赋值语句> <逻辑表达式> ; <内部赋值> ) <复合程序块> : {(}
<声明语句或赋值语句> -> <声明语句> : {int,real}
<声明语句或赋值语句> -> <赋值语句> : {++,--,ID}
<逻辑表达式> -> <表达式> <逻辑运算符> <表达式> : {%,(,*,+,-,/,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<逻辑运算符> -> < : {<}
<逻辑运算符> -> <= : {<=}
<逻辑运算符> -> > : {>}
<逻辑运算符> -> >= : {>=}
<逻辑运算符> -> <> : {<>}
<逻辑运算符> -> == : {==}
<内部赋值> -> <自增减运算符> <变量> : {++,--}
<内部赋值> -> <变量> <赋值> : {ID}
<while循环> -> while <while循环块> : {while}
<while循环块> -> ( <逻辑表达式> ) <复合程序块> : {(}
<条件语句> -> if <条件语句块> : {if}
<条件语句块> -> ( <逻辑表达式> ) <复合程序块> <否则语句> : {(}
<否则语句> -> else <复合程序块> : {else}
 <否则语句> -> $ : {$}
<特殊函数> -> <特殊函数调用> ; : {read,write}
<特殊函数调用> -> <标准函数> ( <参数列表> ) : {read,write}
<标准函数> -> read : {read}
<标准函数> -> write : {write}
<参数列表> -> <参数> <参数闭包> : {<字符串,FLOAT_VALUE,ID,INT_VALUE}
<参数闭包> -> , <参数> <参数闭包> : {,}
 <参数闭包> -> $ : {$}
<参数> -> <标识符> : {ID}
<参数> -> <数字> : {FLOAT_VALUE,INT_VALUE}
<参数> -> <字符串 : {<字符串}
<字符串> -> string : {string}
<复合程序块> -> { <程序块> } : {{}
                     : {$}



————————————————————————Non-teminals' follow sets are as follow————————————————————————
                     : {         <for循环> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
      <for循环块> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
       <while循环> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
    <while循环块> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
      <内部赋值> : {)}
            <参数> : {),,}
      <参数列表> : {)}
      <参数闭包> : {)}
            <变量> : {%,%=,),*,*=,+,++,+=,,,-,--,-=,/,/=,;,<,<=,<>,=,==,>,>=,],}}
            <右值> : {),;}
      <否则语句> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
            <因子> : {),+,-,;,<,<=,<>,==,>,>=}
            <因式> : {%,),*,+,-,/,;,<,<=,<>,==,>,>=,]}
      <因式递归> : {),+,-,;,<,<=,<>,==,>,>=}
            <声明> : {;}
      <声明语句> : {#,%,(,*,+,++,-,--,/,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE,for,if,int,read,real,while,write,}}
<声明语句或赋值语句> : {%,(,*,+,-,/,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<声明语句闭包> : {#,++,--,ID,for,if,read,while,write,}}
   <复合程序块> : {#,++,--,;,ID,else,for,if,int,read,real,while,write,}}
      <多个数据> : {}}
         <字符串> : {,,}}
            <常量> : {,,}}
            <数字> : {%,),*,+,,,-,/,;,<,<=,<>,==,>,>=,],}}
            <数据> : {,,}}
      <数据闭包> : {}}
      <数组下标> : {%,%=,),*,*=,+,++,+=,,,-,--,-=,/,/=,;,<,<=,<>,=,==,>,>=,],}}
      <条件语句> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
   <条件语句块> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
      <标准函数> : {(}
         <标识符> : {%,%=,),*,*=,+,++,+=,,,-,--,-=,/,/=,;,<,<=,<>,=,==,>,>=,[,],}}
      <特殊函数> : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
<特殊函数调用> : {;}
            <程序> : {#}
         <程序块> : {#,}}
   <程序块闭包> : {#,}}
            <类型> : {ID}
<自增减运算符> : {),;,ID}
         <表达式> : {),;,<,<=,<>,==,>,>=}
            <赋值> : {),;}
      <赋值语句> : {#,%,(,*,+,++,-,--,/,;,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE,for,if,int,read,real,while,write,}}
         <赋初值> : {;}
   <逻辑表达式> : {),;}
   <逻辑运算符> : {%,(,),*,+,-,/,;,FLOAT_VALUE,ID,INT_VALUE}
               <项> : {),;,<,<=,<>,==,>,>=}



————————————————————————Deducers' follow sets are as follow————————————————————————
<程序> -> <程序块> : {#,++,--,;,ID,for,if,int,read,real,while,write}
       <程序> -> $ : {#}
    <程序块> -> ; : {;}
<程序块> -> <声明语句闭包> <程序块闭包> : {#,++,--,ID,for,if,int,read,real,while,write,}}
<声明语句闭包> -> <声明语句> <声明语句闭包> : {int,real}
<声明语句闭包> -> $ : {#,++,--,ID,for,if,read,while,write,}}
<声明语句> -> <声明> ; : {int,real}
<声明> -> <类型> <变量> <赋初值> : {int,real}
     <类型> -> int : {int}
    <类型> -> real : {real}
<变量> -> <标识符> <数组下标> : {ID}
   <标识符> -> ID : {ID}
<数组下标> -> [ <因式> ] : {[}
 <数组下标> -> $ : {%,%=,),*,*=,+,++,+=,,,-,--,-=,/,/=,;,<,<=,<>,=,==,>,>=,],}}
<因式> -> ( <表达式> ) : {(}
<因式> -> <变量> : {ID}
<因式> -> <数字> : {FLOAT_VALUE,INT_VALUE}
       <因式> -> $ : {%,),*,+,-,/,;,<,<=,<>,==,>,>=,]}
<数字> -> INT_VALUE : {INT_VALUE}
<数字> -> FLOAT_VALUE : {FLOAT_VALUE}
<赋初值> -> = <右值> : {=}
    <赋初值> -> $ : {;}
<右值> -> <表达式> : {%,(,),*,+,-,/,;,FLOAT_VALUE,ID,INT_VALUE}
<右值> -> { <多个数据> } : {{}
<多个数据> -> <数据> <数据闭包> : {FLOAT_VALUE,ID,INT_VALUE,string}
<数据闭包> -> , <数据> <数据闭包> : {,}
 <数据闭包> -> $ : {}}
<数据> -> <常量> : {FLOAT_VALUE,INT_VALUE,string}
<数据> -> <变量> : {ID}
<常量> -> <数字> : {FLOAT_VALUE,INT_VALUE}
<常量> -> <字符串> : {string}
<表达式> -> <因子> <项> : {%,(,),*,+,-,/,;,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<因子> -> <因式> <因式递归> : {%,(,),*,+,-,/,;,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<因式递归> -> * <因式> <因式递归> : {*}
<因式递归> -> / <因式> <因式递归> : {/}
<因式递归> -> % <因式> <因式递归> : {%}
 <因式递归> -> $ : {),+,-,;,<,<=,<>,==,>,>=}
<项> -> + <因子> <项> : {+}
<项> -> - <因子> <项> : {-}
          <项> -> $ : {),;,<,<=,<>,==,>,>=}
<程序块闭包> -> <赋值语句> <程序块> : {++,--,ID}
<程序块闭包> -> <for循环> <程序块> : {for}
<程序块闭包> -> <while循环> <程序块> : {while}
<程序块闭包> -> <条件语句> <程序块> : {if}
<程序块闭包> -> <特殊函数> <程序块> : {read,write}
<程序块闭包> -> $ : {#,}}
<赋值语句> -> <自增减运算符> <变量> ; : {++,--}
<赋值语句> -> <变量> <赋值> ; : {ID}
<赋值> -> <自增减运算符> : {++,--}
<赋值> -> = <右值> : {=}
<赋值> -> += <右值> : {+=}
<赋值> -> -= <右值> : {-=}
<赋值> -> *= <右值> : {*=}
<赋值> -> /= <右值> : {/=}
<赋值> -> %= <右值> : {%=}
<自增减运算符> -> ++ : {++}
<自增减运算符> -> -- : {--}
<for循环> -> for <for循环块> : {for}
<for循环块> -> ( <声明语句或赋值语句> <逻辑表达式> ; <内部赋值> ) <复合程序块> : {(}
<声明语句或赋值语句> -> <声明语句> : {int,real}
<声明语句或赋值语句> -> <赋值语句> : {++,--,ID}
<逻辑表达式> -> <表达式> <逻辑运算符> <表达式> : {%,(,*,+,-,/,<,<=,<>,==,>,>=,FLOAT_VALUE,ID,INT_VALUE}
<逻辑运算符> -> < : {<}
<逻辑运算符> -> <= : {<=}
<逻辑运算符> -> > : {>}
<逻辑运算符> -> >= : {>=}
<逻辑运算符> -> <> : {<>}
<逻辑运算符> -> == : {==}
<内部赋值> -> <自增减运算符> <变量> : {++,--}
<内部赋值> -> <变量> <赋值> : {ID}
<while循环> -> while <while循环块> : {while}
<while循环块> -> ( <逻辑表达式> ) <复合程序块> : {(}
<条件语句> -> if <条件语句块> : {if}
<条件语句块> -> ( <逻辑表达式> ) <复合程序块> <否则语句> : {(}
<否则语句> -> else <复合程序块> : {else}
 <否则语句> -> $ : {#,++,--,;,ID,for,if,int,read,real,while,write,}}
<特殊函数> -> <特殊函数调用> ; : {read,write}
<特殊函数调用> -> <标准函数> ( <参数列表> ) : {read,write}
<标准函数> -> read : {read}
<标准函数> -> write : {write}
<参数列表> -> <参数> <参数闭包> : {<字符串,FLOAT_VALUE,ID,INT_VALUE}
<参数闭包> -> , <参数> <参数闭包> : {,}
 <参数闭包> -> $ : {)}
<参数> -> <标识符> : {ID}
<参数> -> <数字> : {FLOAT_VALUE,INT_VALUE}
<参数> -> <字符串 : {<字符串}
<字符串> -> string : {string}
<复合程序块> -> { <程序块> } : {{}



————————————————————————Prodiction-analyzing table is as follow————————————————————————
<for循环> encounters for,using deducer:<for循环> -> for <for循环块>
<for循环块> encounters (,using deducer:<for循环块> -> ( <声明语句或赋值语句> <逻辑表达式> ; <内部赋值> ) <复合程序块>
<while循环> encounters while,using deducer:<while循环> -> while <while循环块>
<while循环块> encounters (,using deducer:<while循环块> -> ( <逻辑表达式> ) <复合程序块>
<内部赋值> encounters ++,using deducer:<内部赋值> -> <自增减运算符> <变量>
<内部赋值> encounters --,using deducer:<内部赋值> -> <自增减运算符> <变量>
<内部赋值> encounters ID,using deducer:<内部赋值> -> <变量> <赋值>
<参数> encounters <字符串,using deducer:<参数> -> <字符串
<参数> encounters FLOAT_VALUE,using deducer:<参数> -> <数字>
<参数> encounters ID,using deducer:<参数> -> <标识符>
<参数> encounters INT_VALUE,using deducer:<参数> -> <数字>
<参数列表> encounters <字符串,using deducer:<参数列表> -> <参数> <参数闭包>
<参数列表> encounters FLOAT_VALUE,using deducer:<参数列表> -> <参数> <参数闭包>
<参数列表> encounters ID,using deducer:<参数列表> -> <参数> <参数闭包>
<参数列表> encounters INT_VALUE,using deducer:<参数列表> -> <参数> <参数闭包>
<参数闭包> encounters ),using deducer:<参数闭包> -> $
<参数闭包> encounters ,,using deducer:<参数闭包> -> , <参数> <参数闭包>
<变量> encounters ID,using deducer:<变量> -> <标识符> <数组下标>
<右值> encounters %,using deducer:<右值> -> <表达式>
<右值> encounters (,using deducer:<右值> -> <表达式>
<右值> encounters ),using deducer:<右值> -> <表达式>
<右值> encounters *,using deducer:<右值> -> <表达式>
<右值> encounters +,using deducer:<右值> -> <表达式>
<右值> encounters -,using deducer:<右值> -> <表达式>
<右值> encounters /,using deducer:<右值> -> <表达式>
<右值> encounters ;,using deducer:<右值> -> <表达式>
<右值> encounters FLOAT_VALUE,using deducer:<右值> -> <表达式>
<右值> encounters ID,using deducer:<右值> -> <表达式>
<右值> encounters INT_VALUE,using deducer:<右值> -> <表达式>
<右值> encounters {,using deducer:<右值> -> { <多个数据> }
<否则语句> encounters #,using deducer:<否则语句> -> $
<否则语句> encounters ++,using deducer:<否则语句> -> $
<否则语句> encounters --,using deducer:<否则语句> -> $
<否则语句> encounters ;,using deducer:<否则语句> -> $
<否则语句> encounters ID,using deducer:<否则语句> -> $
<否则语句> encounters else,using deducer:<否则语句> -> else <复合程序块>
<否则语句> encounters for,using deducer:<否则语句> -> $
<否则语句> encounters if,using deducer:<否则语句> -> $
<否则语句> encounters int,using deducer:<否则语句> -> $
<否则语句> encounters read,using deducer:<否则语句> -> $
<否则语句> encounters real,using deducer:<否则语句> -> $
<否则语句> encounters while,using deducer:<否则语句> -> $
<否则语句> encounters write,using deducer:<否则语句> -> $
<否则语句> encounters },using deducer:<否则语句> -> $
<因子> encounters %,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters (,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters ),using deducer:<因子> -> <因式> <因式递归>
<因子> encounters *,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters +,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters -,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters /,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters ;,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters <,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters <=,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters <>,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters ==,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters >,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters >=,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters FLOAT_VALUE,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters ID,using deducer:<因子> -> <因式> <因式递归>
<因子> encounters INT_VALUE,using deducer:<因子> -> <因式> <因式递归>
<因式> encounters %,using deducer:<因式> -> $
<因式> encounters (,using deducer:<因式> -> ( <表达式> )
<因式> encounters ),using deducer:<因式> -> $
<因式> encounters *,using deducer:<因式> -> $
<因式> encounters +,using deducer:<因式> -> $
<因式> encounters -,using deducer:<因式> -> $
<因式> encounters /,using deducer:<因式> -> $
<因式> encounters ;,using deducer:<因式> -> $
<因式> encounters <,using deducer:<因式> -> $
<因式> encounters <=,using deducer:<因式> -> $
<因式> encounters <>,using deducer:<因式> -> $
<因式> encounters ==,using deducer:<因式> -> $
<因式> encounters >,using deducer:<因式> -> $
<因式> encounters >=,using deducer:<因式> -> $
<因式> encounters FLOAT_VALUE,using deducer:<因式> -> <数字>
<因式> encounters ID,using deducer:<因式> -> <变量>
<因式> encounters INT_VALUE,using deducer:<因式> -> <数字>
<因式> encounters ],using deducer:<因式> -> $
<因式递归> encounters %,using deducer:<因式递归> -> % <因式> <因式递归>
<因式递归> encounters ),using deducer:<因式递归> -> $
<因式递归> encounters *,using deducer:<因式递归> -> * <因式> <因式递归>
<因式递归> encounters +,using deducer:<因式递归> -> $
<因式递归> encounters -,using deducer:<因式递归> -> $
<因式递归> encounters /,using deducer:<因式递归> -> / <因式> <因式递归>
<因式递归> encounters ;,using deducer:<因式递归> -> $
<因式递归> encounters <,using deducer:<因式递归> -> $
<因式递归> encounters <=,using deducer:<因式递归> -> $
<因式递归> encounters <>,using deducer:<因式递归> -> $
<因式递归> encounters ==,using deducer:<因式递归> -> $
<因式递归> encounters >,using deducer:<因式递归> -> $
<因式递归> encounters >=,using deducer:<因式递归> -> $
<声明> encounters int,using deducer:<声明> -> <类型> <变量> <赋初值>
<声明> encounters real,using deducer:<声明> -> <类型> <变量> <赋初值>
<声明语句> encounters int,using deducer:<声明语句> -> <声明> ;
<声明语句> encounters real,using deducer:<声明语句> -> <声明> ;
<声明语句或赋值语句> encounters ++,using deducer:<声明语句或赋值语句> -> <赋值语句>
<声明语句或赋值语句> encounters --,using deducer:<声明语句或赋值语句> -> <赋值语句>
<声明语句或赋值语句> encounters ID,using deducer:<声明语句或赋值语句> -> <赋值语句>
<声明语句或赋值语句> encounters int,using deducer:<声明语句或赋值语句> -> <声明语句>
<声明语句或赋值语句> encounters real,using deducer:<声明语句或赋值语句> -> <声明语句>
<声明语句闭包> encounters #,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters ++,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters --,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters ID,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters for,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters if,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters int,using deducer:<声明语句闭包> -> <声明语句> <声明语句闭包>
<声明语句闭包> encounters read,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters real,using deducer:<声明语句闭包> -> <声明语句> <声明语句闭包>
<声明语句闭包> encounters while,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters write,using deducer:<声明语句闭包> -> $
<声明语句闭包> encounters },using deducer:<声明语句闭包> -> $
<复合程序块> encounters {,using deducer:<复合程序块> -> { <程序块> }
<多个数据> encounters FLOAT_VALUE,using deducer:<多个数据> -> <数据> <数据闭包>
<多个数据> encounters ID,using deducer:<多个数据> -> <数据> <数据闭包>
<多个数据> encounters INT_VALUE,using deducer:<多个数据> -> <数据> <数据闭包>
<多个数据> encounters string,using deducer:<多个数据> -> <数据> <数据闭包>
<字符串> encounters string,using deducer:<字符串> -> string
<常量> encounters FLOAT_VALUE,using deducer:<常量> -> <数字>
<常量> encounters INT_VALUE,using deducer:<常量> -> <数字>
<常量> encounters string,using deducer:<常量> -> <字符串>
<数字> encounters FLOAT_VALUE,using deducer:<数字> -> FLOAT_VALUE
<数字> encounters INT_VALUE,using deducer:<数字> -> INT_VALUE
<数据> encounters FLOAT_VALUE,using deducer:<数据> -> <常量>
<数据> encounters ID,using deducer:<数据> -> <变量>
<数据> encounters INT_VALUE,using deducer:<数据> -> <常量>
<数据> encounters string,using deducer:<数据> -> <常量>
<数据闭包> encounters ,,using deducer:<数据闭包> -> , <数据> <数据闭包>
<数据闭包> encounters },using deducer:<数据闭包> -> $
<数组下标> encounters %,using deducer:<数组下标> -> $
<数组下标> encounters %=,using deducer:<数组下标> -> $
<数组下标> encounters ),using deducer:<数组下标> -> $
<数组下标> encounters *,using deducer:<数组下标> -> $
<数组下标> encounters *=,using deducer:<数组下标> -> $
<数组下标> encounters +,using deducer:<数组下标> -> $
<数组下标> encounters ++,using deducer:<数组下标> -> $
<数组下标> encounters +=,using deducer:<数组下标> -> $
<数组下标> encounters ,,using deducer:<数组下标> -> $
<数组下标> encounters -,using deducer:<数组下标> -> $
<数组下标> encounters --,using deducer:<数组下标> -> $
<数组下标> encounters -=,using deducer:<数组下标> -> $
<数组下标> encounters /,using deducer:<数组下标> -> $
<数组下标> encounters /=,using deducer:<数组下标> -> $
<数组下标> encounters ;,using deducer:<数组下标> -> $
<数组下标> encounters <,using deducer:<数组下标> -> $
<数组下标> encounters <=,using deducer:<数组下标> -> $
<数组下标> encounters <>,using deducer:<数组下标> -> $
<数组下标> encounters =,using deducer:<数组下标> -> $
<数组下标> encounters ==,using deducer:<数组下标> -> $
<数组下标> encounters >,using deducer:<数组下标> -> $
<数组下标> encounters >=,using deducer:<数组下标> -> $
<数组下标> encounters [,using deducer:<数组下标> -> [ <因式> ]
<数组下标> encounters ],using deducer:<数组下标> -> $
<数组下标> encounters },using deducer:<数组下标> -> $
<条件语句> encounters if,using deducer:<条件语句> -> if <条件语句块>
<条件语句块> encounters (,using deducer:<条件语句块> -> ( <逻辑表达式> ) <复合程序块> <否则语句>
<标准函数> encounters read,using deducer:<标准函数> -> read
<标准函数> encounters write,using deducer:<标准函数> -> write
<标识符> encounters ID,using deducer:<标识符> -> ID
<特殊函数> encounters read,using deducer:<特殊函数> -> <特殊函数调用> ;
<特殊函数> encounters write,using deducer:<特殊函数> -> <特殊函数调用> ;
<特殊函数调用> encounters read,using deducer:<特殊函数调用> -> <标准函数> ( <参数列表> )
<特殊函数调用> encounters write,using deducer:<特殊函数调用> -> <标准函数> ( <参数列表> )
<程序> encounters #,using deducer:<程序> -> $
<程序> encounters ++,using deducer:<程序> -> <程序块>
<程序> encounters --,using deducer:<程序> -> <程序块>
<程序> encounters ;,using deducer:<程序> -> <程序块>
<程序> encounters ID,using deducer:<程序> -> <程序块>
<程序> encounters for,using deducer:<程序> -> <程序块>
<程序> encounters if,using deducer:<程序> -> <程序块>
<程序> encounters int,using deducer:<程序> -> <程序块>
<程序> encounters read,using deducer:<程序> -> <程序块>
<程序> encounters real,using deducer:<程序> -> <程序块>
<程序> encounters while,using deducer:<程序> -> <程序块>
<程序> encounters write,using deducer:<程序> -> <程序块>
<程序块> encounters #,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters ++,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters --,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters ;,using deducer:<程序块> -> ;
<程序块> encounters ID,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters for,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters if,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters int,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters read,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters real,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters while,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters write,using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块> encounters },using deducer:<程序块> -> <声明语句闭包> <程序块闭包>
<程序块闭包> encounters #,using deducer:<程序块闭包> -> $
<程序块闭包> encounters ++,using deducer:<程序块闭包> -> <赋值语句> <程序块>
<程序块闭包> encounters --,using deducer:<程序块闭包> -> <赋值语句> <程序块>
<程序块闭包> encounters ID,using deducer:<程序块闭包> -> <赋值语句> <程序块>
<程序块闭包> encounters for,using deducer:<程序块闭包> -> <for循环> <程序块>
<程序块闭包> encounters if,using deducer:<程序块闭包> -> <条件语句> <程序块>
<程序块闭包> encounters read,using deducer:<程序块闭包> -> <特殊函数> <程序块>
<程序块闭包> encounters while,using deducer:<程序块闭包> -> <while循环> <程序块>
<程序块闭包> encounters write,using deducer:<程序块闭包> -> <特殊函数> <程序块>
<程序块闭包> encounters },using deducer:<程序块闭包> -> $
<类型> encounters int,using deducer:<类型> -> int
<类型> encounters real,using deducer:<类型> -> real
<自增减运算符> encounters ++,using deducer:<自增减运算符> -> ++
<自增减运算符> encounters --,using deducer:<自增减运算符> -> --
<表达式> encounters %,using deducer:<表达式> -> <因子> <项>
<表达式> encounters (,using deducer:<表达式> -> <因子> <项>
<表达式> encounters ),using deducer:<表达式> -> <因子> <项>
<表达式> encounters *,using deducer:<表达式> -> <因子> <项>
<表达式> encounters +,using deducer:<表达式> -> <因子> <项>
<表达式> encounters -,using deducer:<表达式> -> <因子> <项>
<表达式> encounters /,using deducer:<表达式> -> <因子> <项>
<表达式> encounters ;,using deducer:<表达式> -> <因子> <项>
<表达式> encounters <,using deducer:<表达式> -> <因子> <项>
<表达式> encounters <=,using deducer:<表达式> -> <因子> <项>
<表达式> encounters <>,using deducer:<表达式> -> <因子> <项>
<表达式> encounters ==,using deducer:<表达式> -> <因子> <项>
<表达式> encounters >,using deducer:<表达式> -> <因子> <项>
<表达式> encounters >=,using deducer:<表达式> -> <因子> <项>
<表达式> encounters FLOAT_VALUE,using deducer:<表达式> -> <因子> <项>
<表达式> encounters ID,using deducer:<表达式> -> <因子> <项>
<表达式> encounters INT_VALUE,using deducer:<表达式> -> <因子> <项>
<赋值> encounters %=,using deducer:<赋值> -> %= <右值>
<赋值> encounters *=,using deducer:<赋值> -> *= <右值>
<赋值> encounters ++,using deducer:<赋值> -> <自增减运算符>
<赋值> encounters +=,using deducer:<赋值> -> += <右值>
<赋值> encounters --,using deducer:<赋值> -> <自增减运算符>
<赋值> encounters -=,using deducer:<赋值> -> -= <右值>
<赋值> encounters /=,using deducer:<赋值> -> /= <右值>
<赋值> encounters =,using deducer:<赋值> -> = <右值>
<赋值语句> encounters ++,using deducer:<赋值语句> -> <自增减运算符> <变量> ;
<赋值语句> encounters --,using deducer:<赋值语句> -> <自增减运算符> <变量> ;
<赋值语句> encounters ID,using deducer:<赋值语句> -> <变量> <赋值> ;
<赋初值> encounters ;,using deducer:<赋初值> -> $
<赋初值> encounters =,using deducer:<赋初值> -> = <右值>
<逻辑表达式> encounters %,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters (,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters *,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters +,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters -,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters /,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters <,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters <=,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters <>,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters ==,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters >,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters >=,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters FLOAT_VALUE,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters ID,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑表达式> encounters INT_VALUE,using deducer:<逻辑表达式> -> <表达式> <逻辑运算符> <表达式>
<逻辑运算符> encounters <,using deducer:<逻辑运算符> -> <
<逻辑运算符> encounters <=,using deducer:<逻辑运算符> -> <=
<逻辑运算符> encounters <>,using deducer:<逻辑运算符> -> <>
<逻辑运算符> encounters ==,using deducer:<逻辑运算符> -> ==
<逻辑运算符> encounters >,using deducer:<逻辑运算符> -> >
<逻辑运算符> encounters >=,using deducer:<逻辑运算符> -> >=
<项> encounters ),using deducer:<项> -> $
<项> encounters +,using deducer:<项> -> + <因子> <项>
<项> encounters -,using deducer:<项> -> - <因子> <项>
<项> encounters ;,using deducer:<项> -> $
<项> encounters <,using deducer:<项> -> $
<项> encounters <=,using deducer:<项> -> $
<项> encounters <>,using deducer:<项> -> $
<项> encounters ==,using deducer:<项> -> $
<项> encounters >,using deducer:<项> -> $
<项> encounters >=,using deducer:<项> -> $



